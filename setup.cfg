[bdist_wheel]
# set universal = 1 if Python 2 and 3 are supported
;universal = 1

[metadata]
# name = yabs  # GitHub dependants needs it in setup.py?
version = attr: yabs.__version__
author = Martin Wendt
author_email = yabs@wwwendt.de
maintainer = Martin Wendt
maintainer_email = yabs@wwwendt.de
url = https://github.com/mar10/yabs
project_urls =
    Bug Tracker = https://github.com/mar10/yabs/issues
    Source Code = https://github.com/mar10/yabs
    Documentation = https://yabs.readthedocs.io
    Download = https://github.com/mar10/yabs/releases/latest
    # Discussions = https://github.com/mar10/yabs/discussions
description = Yet Another Build Script
long_description = file: README.md
long_description_content_type = text/markdown
keywords = build, setup, ci, workflow, automation
license = MIT
license_files = LICENSE.txt
classifiers =
    # Development Status :: 3 - Alpha
    Development Status :: 4 - Beta
    # Development Status :: 5 - Production/Stable
    Environment :: Console
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Topic :: Software Development :: Build Tools
    Topic :: System :: Installation/Setup
    Topic :: System :: Software Distribution

[options]
package_dir =
    = .
packages = find:
# zip_safe = False

install_requires =
    GitPython
    PyGithub
    PyYAML
    semantic_version
    setuptools
    snazzy
    toml
    twine
    wheel

# [options.package_data]
# * = *.txt, *.rst
# hello = *.msg

# [options.extras_require]
# pdf = ReportLab>=1.2; RXP
# rest = docutils>=0.3; pack ==1.1, ==1.3

[options.packages.find]
where = .
include_package_data = True
exclude =
    tests

[options.data_files]
. = CHANGELOG.md
# /etc/my_package =
#     site.d/00_default.conf
#     host.d/00_default.conf
# data = data/img/logo.png, data/svg/icon.svg

[options.entry_points]
console_scripts =
    yabs = yabs.cli:run

# --- Coverage Settings --------------------------------------------------------

[coverage:run]
branch = True
omit =
    yabs/cli.py

[coverage:report]
precision = 2
; show_missing = True
sort = Name
exclude_lines =
    pragma: no cover
    if __name__ == .__main__.:

[coverage:html]
directory = build/coverage

# --- Alternative to pytest.ini ---------------------------------------------
[tool:pytest]
# Silence `PytestDeprecationWarning`
junit_family = legacy
; testpaths =
;     tests
;     src

# --- Flake8 Settings ----------------------------------------------------------

[flake8]
# G: enable 'flake8-logging-format'
enable-extensions = G

exclude =
    __pycache__,
    .cache,
    .eggs,
    .git,
    .tox,
    .vscode,
    build,
    dist,
    docs

max-line-length = 99
# max-line-length = 88

# 'mccabe' plugin:
# max-complexity = 12

# max-annotations-complexity = 10
# max-expression-complexity = 10

# Ignore some errors that may be created by Black:
#   - E203 whitespace before ':'
#   - E501 line too long
#   - W503 line break before binary operator
#   - P101 format string does contain unindexed parameters
ignore = E203, E501, W503, P101

# Instead of strict E501, enable B950 for relaxed line length checking (and other bugbear warnings)
# select = B,C,D,E,F,I,N,P,PT,Q,S,T,W,B9

#
docstring-convention = all  # google?

# Options for the flake8-quotes extension:
inline-quotes = double
multiline-quotes = """
docstring-quotes = """
avoid-escape = True
